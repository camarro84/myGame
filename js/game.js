const guessInput = document.getElementById("guessInput");
const checkBtn = document.getElementById("checkBtn");
const restartBtn = document.getElementById("restartBtn");
const message = document.getElementById("message");
const history = document.getElementById("history");
const volumeControl = document.getElementById("volumeControl");
const toggleMusic = document.getElementById("toggleMusic");

const gameMusic = document.getElementById("gameMusic");
const failSound = document.getElementById("failSound");
const buttonClick = document.getElementById("buttonClick");

let secretNumber;
let attempts;
const maxAttempts = 10;
let musicPlaying = false;

function initGame() {
  secretNumber = Math.floor(Math.random() * 100) + 1;
  attempts = 0;
  message.textContent = "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 –∏ –Ω–∞–∂–º–∏—Ç–µ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å.";
  message.style.color = "var(--text)";
  history.innerHTML = "";
  guessInput.value = "";
  guessInput.disabled = false;
  guessInput.classList.remove("error");
  checkBtn.style.display = "inline-block";
  restartBtn.style.display = "none";
  guessInput.focus();
  
  playMusic();
}

function addHistory(text) {
  const li = document.createElement("li");
  li.textContent = text;
  history.appendChild(li);
  history.scrollTop = history.scrollHeight;
}

function setErrorState(errorMsg) {
  message.textContent = errorMsg;
  message.style.color = "red";
  guessInput.classList.add("error");
}

function clearErrorState() {
  message.style.color = "var(--text)";
  guessInput.classList.remove("error");
}

function playMusic() {
  gameMusic.volume = volumeControl.value;
  if (!musicPlaying) {
    gameMusic.play().catch(() => {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∞—Ä—Ç –∑–≤—É–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±—Ä–∞—É–∑–µ—Ä–æ–º
      musicPlaying = false;
    });
    musicPlaying = true;
  }
}

function pauseMusic() {
  gameMusic.pause();
  musicPlaying = false;
}

checkBtn.addEventListener("click", () => {
  buttonClick.play();
  const guess = Number(guessInput.value);
  
  if (!guess || guess < 1 || guess > 100) {
    setErrorState("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100!");
    guessInput.focus();
    return;
  }
  
  clearErrorState();
  attempts++;

  const diff = Math.abs(secretNumber - guess);

  if (guess === secretNumber) {
    message.style.color = "green";
    message.textContent = `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ –∑–∞ ${attempts} –ø–æ–ø—ã—Ç–æ–∫!`;
    guessInput.disabled = true;
    checkBtn.style.display = "none";
    restartBtn.style.display = "inline-block";
    pauseMusic();
  } else if (attempts >= maxAttempts) {
    message.style.color = "red";
    message.textContent = `–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ ${maxAttempts} –ø–æ–ø—ã—Ç–æ–∫. –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ: ${secretNumber}`;
    guessInput.disabled = true;
    checkBtn.style.display = "none";
    restartBtn.style.display = "inline-block";
    pauseMusic();
    failSound.play();
  } else {
    if (guess < secretNumber) {
      message.textContent = "–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ.";
    } else {
      message.textContent = "–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ.";
    }

    if (diff <= 5) {
      message.style.color = "green";
    } else if (diff <= 15) {
      message.style.color = "orange";
    } else {
      message.style.color = "red";
    }

    addHistory(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}: ${guess} ‚Äî ${guess < secretNumber ? "–º–µ–Ω—å—à–µ" : "–±–æ–ª—å—à–µ"} –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ.`);
  }

  guessInput.value = "";
  guessInput.focus();
});

restartBtn.addEventListener("click", () => {
  buttonClick.play();
  initGame();
});

volumeControl.addEventListener("input", () => {
  gameMusic.volume = volumeControl.value;
});

toggleMusic.addEventListener("click", () => {
  buttonClick.play();
  if (musicPlaying) {
    pauseMusic();
    toggleMusic.textContent = "–ú—É–∑—ã–∫–∞ –í–∫–ª";
  } else {
    playMusic();
    toggleMusic.textContent = "–ú—É–∑—ã–∫–∞ –í—ã–∫–ª";
  }
});

// –£–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ
guessInput.addEventListener("input", () => {
  if (guessInput.classList.contains("error")) {
    clearErrorState();
  }
});

initGame();
